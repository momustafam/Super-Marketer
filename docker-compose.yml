services:
  # Data Warehouse SQL Server (starts first)
  data_warehouse:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql_data_warehouse
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "YourStrong!Passw0rd"
    ports:
      - "1434:1433"
    volumes:
      - sql_data_warehouse:/var/opt/mssql
      - ./data:/data  # Mount data directory for bulk loading
    healthcheck:
      test: ["CMD", "bash", "-c", "exec 3<>/dev/tcp/localhost/1433"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - app_network

  # Marketing Data Mart SQL Server (depends on warehouse)
  marketing_data_mart:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql_marketing_data_mart
    depends_on:
      data_warehouse:
        condition: service_healthy
    ports:
      - "1435:1433"
    environment:
      SA_PASSWORD: "Password1234!"
      ACCEPT_EULA: "Y"
    volumes:
      - sql_data_mart:/var/opt/mssql
    healthcheck:
      test: ["CMD", "bash", "-c", "exec 3<>/dev/tcp/localhost/1433"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - app_network

  # Combined SQL Tools for both warehouse and data mart
  sql_tools:
    image: mcr.microsoft.com/mssql-tools
    container_name: sql_tools_runner
    depends_on:
      data_warehouse:
        condition: service_healthy
      marketing_data_mart:
        condition: service_healthy
    volumes:
      - ./data_engineering/init_warehouse.sql:/scripts/init_warehouse.sql
      - ./data_engineering/init_mart.sql:/scripts/init_mart.sql
    entrypoint: >
      /bin/bash -c "
      echo 'Waiting for SQL Servers to be ready...' &&
      sleep 15 &&
      
      echo 'Running init_warehouse.sql...' &&
      /opt/mssql-tools/bin/sqlcmd -S sql_data_warehouse -U SA -P 'YourStrong!Passw0rd' -i /scripts/init_warehouse.sql 2>&1 ||
      echo 'init_warehouse.sql execution failed.' &&
      
      echo 'Waiting for Marketing Data Mart SQL Server...' &&
      for i in {1..30}; do
        /opt/mssql-tools/bin/sqlcmd -S sql_marketing_data_mart -U SA -P 'Password1234!' -Q 'SELECT 1' && break;
        sleep 2;
      done &&
      
      echo 'Running init_mart.sql...' &&
      /opt/mssql-tools/bin/sqlcmd -S sql_marketing_data_mart -U SA -P 'Password1234!' -i /scripts/init_mart.sql &&
      
      echo 'Checking if MarketingDataMart was created...' &&
      /opt/mssql-tools/bin/sqlcmd -S sql_marketing_data_mart -U SA -P 'Password1234!' -Q \"SELECT name FROM sys.databases WHERE name = 'MarketingDataMart';\" &&
      
      echo 'Initialization scripts executed successfully!';
      "
    networks:
      - app_network

  # ETL Data Engineering Service
  etl_pipeline:
    build:
      context: ./data_engineering
      dockerfile: Dockerfile
    container_name: etl_pipeline
    depends_on:
      data_warehouse:
        condition: service_healthy
      marketing_data_mart:
        condition: service_healthy
    volumes:
      - ./data_engineering:/app/data_engineering
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - app_network


  # ✅ FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_api
    ports:
      - "8000:8000"
    environment:
      DB_SERVER: marketing_data_mart
      DB_PORT: 1433
      DB_NAME: MarketingDataMart
      DB_USER: sa
      DB_PASSWORD: Password1234!
    depends_on:
      marketing_data_mart:
        condition: service_healthy
    networks:
      - app_network

  # ✅ React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_app
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app_network

volumes:
  sql_data_warehouse:
  sql_data_mart:

networks:
  app_network:
    name: super_marketer_network
    driver: bridge